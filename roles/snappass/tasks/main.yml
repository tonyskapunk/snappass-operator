---
- name: Redis deploy
  kubernetes.core.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: "{{ ansible_operator_meta.name }}-redis-snappass"
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        replicas: "{{ redis_size }}"
        selector:
          matchLabels:
            app: snappass
        template:
          metadata:
            labels:
              app: snappass
          spec:
            containers:
              - name: redis
                image: "{{ lookup('env', 'RELATED_IMAGE_REDIS') | default(redis_image, true) }}"
                ports:
                  - containerPort: "{{ redis_port }}"

- name: Redis svc
  kubernetes.core.k8s:
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: "{{ ansible_operator_meta.name }}-redis-svc"
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        type: ClusterIP
        ports:
          - port: 16379
            protocol: TCP
            targetPort: "{{ redis_port }}"
        selector:
          app: snappass

- name: Snap Pass deploy
  kubernetes.core.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: "{{ ansible_operator_meta.name }}-snappass"
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: snappass
        template:
          metadata:
            labels:
              app: snappass
          spec:
            containers:
              - name: snappass
                image: "{{ lookup('env', 'RELATED_IMAGE_SNAPPASS') | default(snappass_image, true) }}"
                env:
                  - name: REDIS_URL
                    value: "redis://{{ ansible_operator_meta.name}}-redis-svc:16379"
                  - name: NO_SSL
                    value: ok
                ports:
                  - containerPort: "{{ snappass_port }}"

- name: SnapPass svc
  kubernetes.core.k8s:
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: "{{ ansible_operator_meta.name }}-snappass-svc"
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        type: ClusterIP
        ports:
          - port: 15000
            protocol: TCP
            targetPort: "{{ snappass_port }}"
        selector:
          app: snappass

#- name: SnapPass all-in-one
#  kubernetes.core.k8s:
#    definition:
#      kind: Deployment
#      apiVersion: apps/v1
#      metadata:
#        name: "{{ ansible_operator_meta.name }}-snappass"
#        namespace: "{{ ansible_operator_meta.namespace }}"
#      spec:
#        replicas: 1
#        selector:
#          matchLabels:
#            app: snappass
#        template:
#          metadata:
#            labels:
#              app: snappass
#          spec:
#            containers:
#              - name: redis
#                image: "{{ redis_image }}"
#                ports:
#                  - containerPort: "{{ redis_port }}"
#              - name: snappass
#                image: "{{ snappass_image }}"
#                env:
#                  - name: REDIS_URL
#                    value: "redis://localhost:{{ redis_port }}"
#                  - name: NO_SSL
#                    value: ok
#                ports:
#                  - containerPort: "{{ snappass_port }}"
#
